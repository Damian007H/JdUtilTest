apply plugin: 'com.android.library'
def androidVersion = rootProject.ext.android_version
def jarInfo = rootProject.ext.jd_util

android {

    compileSdkVersion androidVersion.compileSdkVersion
    buildToolsVersion androidVersion.buildToolsVersion
    defaultConfig {
        minSdkVersion androidVersion.minSdkVersion
        targetSdkVersion androidVersion.targetSdkVersion
        versionCode jarInfo.versionCode
        versionName jarInfo.versionName
        consumerProguardFiles 'consumer-rules.pro'

    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:' + androidVersion.supportVersion

}


def _BASENAME = jarInfo.name;
def _VERSION = jarInfo.versionName;
def _DestinationPath = jarInfo.destinationPath; //生成jar包的位置
//build/intermediates/bundles/default/classes.jar 有的说是这个位置，具体看androidStudio的版本
def zipFile = file('build/intermediates/packaged-classes/debug/classes.jar'); //待打包文件位置

task deleteBuild(type: Delete) {
    delete _DestinationPath + _BASENAME + _VERSION + ".jar"
}

task makeJar(type: Jar) {
    from zipTree(zipFile)
    from fileTree(dir: 'src/main', includes: ['assets/**']) //将assets目录打入jar包
    baseName = _BASENAME + _VERSION
    destinationDir = file(_DestinationPath)
}

makeJar.dependsOn(deleteBuild, build)